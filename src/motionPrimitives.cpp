#include <iostream>
#include <vector>
#include "../include/motionPrimitives.h"
#include "../include/map.h"

using namespace std;

bool MP::isFree(Map m) {
	for(Vec4 p: intermediate_poses) {
		if(!m.isFree(p.x, p.y)) return false;
	}
	return true;
}

vector<MP> MPrims_highres() { // copy and paste from MATLAB file here
	vector<MP> mprims;

	MP mp0 = MP(
	  0, 
	  0, 
	  Vec4( 1, 0, 0 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0028, 0.0000, 0.0000 ), 
	    Vec4( 0.0056, 0.0000, 0.0000 ), 
	    Vec4( 0.0083, 0.0000, 0.0000 ), 
	    Vec4( 0.0111, 0.0000, 0.0000 ), 
	    Vec4( 0.0139, 0.0000, 0.0000 ), 
	    Vec4( 0.0167, 0.0000, 0.0000 ), 
	    Vec4( 0.0194, 0.0000, 0.0000 ), 
	    Vec4( 0.0222, 0.0000, 0.0000 ), 
	    Vec4( 0.0250, 0.0000, 0.0000 )
	  } 
	);
	mprims.push_back(mp0);

	MP mp1 = MP(
	  1, 
	  0, 
	  Vec4( 8, 0, 0 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0222, 0.0000, 0.0000 ), 
	    Vec4( 0.0444, 0.0000, 0.0000 ), 
	    Vec4( 0.0667, 0.0000, 0.0000 ), 
	    Vec4( 0.0889, 0.0000, 0.0000 ), 
	    Vec4( 0.1111, 0.0000, 0.0000 ), 
	    Vec4( 0.1333, 0.0000, 0.0000 ), 
	    Vec4( 0.1556, 0.0000, 0.0000 ), 
	    Vec4( 0.1778, 0.0000, 0.0000 ), 
	    Vec4( 0.2000, 0.0000, 0.0000 )
	  } 
	);
	mprims.push_back(mp1);

	MP mp2 = MP(
	  2, 
	  0, 
	  Vec4( 8, 1, 1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0226, -0.0000, 0.0000 ), 
	    Vec4( 0.0452, -0.0000, 0.0000 ), 
	    Vec4( 0.0678, -0.0000, 0.0000 ), 
	    Vec4( 0.0903, 0.0004, 0.0488 ), 
	    Vec4( 0.1128, 0.0023, 0.1176 ), 
	    Vec4( 0.1352, 0.0057, 0.1864 ), 
	    Vec4( 0.1572, 0.0106, 0.2551 ), 
	    Vec4( 0.1789, 0.0171, 0.3239 ), 
	    Vec4( 0.2000, 0.0250, 0.3927 )
	  } 
	);
	mprims.push_back(mp2);

	MP mp3 = MP(
	  3, 
	  0, 
	  Vec4( 8, -1, -1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0226, 0.0000, 0.0000 ), 
	    Vec4( 0.0452, 0.0000, 0.0000 ), 
	    Vec4( 0.0678, 0.0000, 0.0000 ), 
	    Vec4( 0.0903, -0.0004, -0.0488 ), 
	    Vec4( 0.1128, -0.0023, -0.1176 ), 
	    Vec4( 0.1352, -0.0057, -0.1864 ), 
	    Vec4( 0.1572, -0.0106, -0.2551 ), 
	    Vec4( 0.1789, -0.0171, -0.3239 ), 
	    Vec4( 0.2000, -0.0250, -0.3927 )
	  } 
	);
	mprims.push_back(mp3);

	MP mp4 = MP(
	  4, 
	  1, 
	  Vec4( 2, 1, 1 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.3927 ), 
	    Vec4( 0.0056, 0.0028, 0.3927 ), 
	    Vec4( 0.0111, 0.0056, 0.3927 ), 
	    Vec4( 0.0167, 0.0083, 0.3927 ), 
	    Vec4( 0.0222, 0.0111, 0.3927 ), 
	    Vec4( 0.0278, 0.0139, 0.3927 ), 
	    Vec4( 0.0333, 0.0167, 0.3927 ), 
	    Vec4( 0.0389, 0.0194, 0.3927 ), 
	    Vec4( 0.0444, 0.0222, 0.3927 ), 
	    Vec4( 0.0500, 0.0250, 0.3927 )
	  } 
	);
	mprims.push_back(mp4);

	MP mp5 = MP(
	  5, 
	  1, 
	  Vec4( 6, 3, 1 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.3927 ), 
	    Vec4( 0.0167, 0.0083, 0.3927 ), 
	    Vec4( 0.0333, 0.0167, 0.3927 ), 
	    Vec4( 0.0500, 0.0250, 0.3927 ), 
	    Vec4( 0.0667, 0.0333, 0.3927 ), 
	    Vec4( 0.0833, 0.0417, 0.3927 ), 
	    Vec4( 0.1000, 0.0500, 0.3927 ), 
	    Vec4( 0.1167, 0.0583, 0.3927 ), 
	    Vec4( 0.1333, 0.0667, 0.3927 ), 
	    Vec4( 0.1500, 0.0750, 0.3927 )
	  } 
	);
	mprims.push_back(mp5);

	MP mp6 = MP(
	  6, 
	  1, 
	  Vec4( 5, 4, 2 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.3927 ), 
	    Vec4( 0.0149, 0.0092, 0.4230 ), 
	    Vec4( 0.0296, 0.0189, 0.4533 ), 
	    Vec4( 0.0440, 0.0291, 0.4836 ), 
	    Vec4( 0.0582, 0.0398, 0.5139 ), 
	    Vec4( 0.0722, 0.0509, 0.5442 ), 
	    Vec4( 0.0858, 0.0625, 0.5745 ), 
	    Vec4( 0.0992, 0.0746, 0.6048 ), 
	    Vec4( 0.1123, 0.0871, 0.6351 ), 
	    Vec4( 0.1250, 0.1000, 0.6654 )
	  } 
	);
	mprims.push_back(mp6);

	MP mp7 = MP(
	  7, 
	  1, 
	  Vec4( 7, 2, 0 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.3927 ), 
	    Vec4( 0.0188, 0.0078, 0.3927 ), 
	    Vec4( 0.0377, 0.0156, 0.3927 ), 
	    Vec4( 0.0565, 0.0234, 0.3927 ), 
	    Vec4( 0.0754, 0.0312, 0.3736 ), 
	    Vec4( 0.0946, 0.0379, 0.2989 ), 
	    Vec4( 0.1143, 0.0432, 0.2242 ), 
	    Vec4( 0.1344, 0.0470, 0.1494 ), 
	    Vec4( 0.1546, 0.0492, 0.0747 ), 
	    Vec4( 0.1750, 0.0500, -0.0000 )
	  } 
	);
	mprims.push_back(mp7);

	MP mp8 = MP(
	  8, 
	  2, 
	  Vec4( 1, 1, 2 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0028, 0.0028, 0.7854 ), 
	    Vec4( 0.0056, 0.0056, 0.7854 ), 
	    Vec4( 0.0083, 0.0083, 0.7854 ), 
	    Vec4( 0.0111, 0.0111, 0.7854 ), 
	    Vec4( 0.0139, 0.0139, 0.7854 ), 
	    Vec4( 0.0167, 0.0167, 0.7854 ), 
	    Vec4( 0.0194, 0.0194, 0.7854 ), 
	    Vec4( 0.0222, 0.0222, 0.7854 ), 
	    Vec4( 0.0250, 0.0250, 0.7854 )
	  } 
	);
	mprims.push_back(mp8);

	MP mp9 = MP(
	  9, 
	  2, 
	  Vec4( 6, 6, 2 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0167, 0.0167, 0.7854 ), 
	    Vec4( 0.0333, 0.0333, 0.7854 ), 
	    Vec4( 0.0500, 0.0500, 0.7854 ), 
	    Vec4( 0.0667, 0.0667, 0.7854 ), 
	    Vec4( 0.0833, 0.0833, 0.7854 ), 
	    Vec4( 0.1000, 0.1000, 0.7854 ), 
	    Vec4( 0.1167, 0.1167, 0.7854 ), 
	    Vec4( 0.1333, 0.1333, 0.7854 ), 
	    Vec4( 0.1500, 0.1500, 0.7854 )
	  } 
	);
	mprims.push_back(mp9);

	MP mp10 = MP(
	  10, 
	  2, 
	  Vec4( 5, 7, 3 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0170, 0.0170, 0.7854 ), 
	    Vec4( 0.0339, 0.0342, 0.8151 ), 
	    Vec4( 0.0500, 0.0522, 0.8669 ), 
	    Vec4( 0.0651, 0.0709, 0.9188 ), 
	    Vec4( 0.0792, 0.0904, 0.9707 ), 
	    Vec4( 0.0923, 0.1107, 1.0225 ), 
	    Vec4( 0.1043, 0.1315, 1.0744 ), 
	    Vec4( 0.1152, 0.1530, 1.1262 ), 
	    Vec4( 0.1250, 0.1750, 1.1781 )
	  } 
	);
	mprims.push_back(mp10);

	MP mp11 = MP(
	  11, 
	  2, 
	  Vec4( 7, 5, 1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0170, 0.0170, 0.7854 ), 
	    Vec4( 0.0342, 0.0339, 0.7557 ), 
	    Vec4( 0.0522, 0.0500, 0.7039 ), 
	    Vec4( 0.0709, 0.0651, 0.6520 ), 
	    Vec4( 0.0904, 0.0792, 0.6001 ), 
	    Vec4( 0.1107, 0.0923, 0.5483 ), 
	    Vec4( 0.1315, 0.1043, 0.4964 ), 
	    Vec4( 0.1530, 0.1152, 0.4446 ), 
	    Vec4( 0.1750, 0.1250, 0.3927 )
	  } 
	);
	mprims.push_back(mp11);

	MP mp12 = MP(
	  12, 
	  3, 
	  Vec4( 1, 2, 3 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.1781 ), 
	    Vec4( 0.0028, 0.0056, 1.1781 ), 
	    Vec4( 0.0056, 0.0111, 1.1781 ), 
	    Vec4( 0.0083, 0.0167, 1.1781 ), 
	    Vec4( 0.0111, 0.0222, 1.1781 ), 
	    Vec4( 0.0139, 0.0278, 1.1781 ), 
	    Vec4( 0.0167, 0.0333, 1.1781 ), 
	    Vec4( 0.0194, 0.0389, 1.1781 ), 
	    Vec4( 0.0222, 0.0444, 1.1781 ), 
	    Vec4( 0.0250, 0.0500, 1.1781 )
	  } 
	);
	mprims.push_back(mp12);

	MP mp13 = MP(
	  13, 
	  3, 
	  Vec4( 3, 6, 3 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.1781 ), 
	    Vec4( 0.0083, 0.0167, 1.1781 ), 
	    Vec4( 0.0167, 0.0333, 1.1781 ), 
	    Vec4( 0.0250, 0.0500, 1.1781 ), 
	    Vec4( 0.0333, 0.0667, 1.1781 ), 
	    Vec4( 0.0417, 0.0833, 1.1781 ), 
	    Vec4( 0.0500, 0.1000, 1.1781 ), 
	    Vec4( 0.0583, 0.1167, 1.1781 ), 
	    Vec4( 0.0667, 0.1333, 1.1781 ), 
	    Vec4( 0.0750, 0.1500, 1.1781 )
	  } 
	);
	mprims.push_back(mp13);

	MP mp14 = MP(
	  14, 
	  3, 
	  Vec4( 4, 5, 2 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.1781 ), 
	    Vec4( 0.0092, 0.0149, 1.1478 ), 
	    Vec4( 0.0189, 0.0296, 1.1175 ), 
	    Vec4( 0.0291, 0.0440, 1.0872 ), 
	    Vec4( 0.0398, 0.0582, 1.0569 ), 
	    Vec4( 0.0509, 0.0722, 1.0266 ), 
	    Vec4( 0.0625, 0.0858, 0.9963 ), 
	    Vec4( 0.0746, 0.0992, 0.9660 ), 
	    Vec4( 0.0871, 0.1123, 0.9357 ), 
	    Vec4( 0.1000, 0.1250, 0.9054 )
	  } 
	);
	mprims.push_back(mp14);

	MP mp15 = MP(
	  15, 
	  3, 
	  Vec4( 2, 7, 4 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.1781 ), 
	    Vec4( 0.0078, 0.0188, 1.1781 ), 
	    Vec4( 0.0156, 0.0377, 1.1781 ), 
	    Vec4( 0.0234, 0.0565, 1.1781 ), 
	    Vec4( 0.0312, 0.0754, 1.1972 ), 
	    Vec4( 0.0379, 0.0946, 1.2719 ), 
	    Vec4( 0.0432, 0.1143, 1.3466 ), 
	    Vec4( 0.0470, 0.1344, 1.4214 ), 
	    Vec4( 0.0492, 0.1546, 1.4961 ), 
	    Vec4( 0.0500, 0.1750, 1.5708 )
	  } 
	);
	mprims.push_back(mp15);

	MP mp16 = MP(
	  16, 
	  4, 
	  Vec4( 0, 1, 4 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0000, 0.0028, 1.5708 ), 
	    Vec4( 0.0000, 0.0056, 1.5708 ), 
	    Vec4( 0.0000, 0.0083, 1.5708 ), 
	    Vec4( 0.0000, 0.0111, 1.5708 ), 
	    Vec4( 0.0000, 0.0139, 1.5708 ), 
	    Vec4( 0.0000, 0.0167, 1.5708 ), 
	    Vec4( 0.0000, 0.0194, 1.5708 ), 
	    Vec4( 0.0000, 0.0222, 1.5708 ), 
	    Vec4( 0.0000, 0.0250, 1.5708 )
	  } 
	);
	mprims.push_back(mp16);

	MP mp17 = MP(
	  17, 
	  4, 
	  Vec4( 0, 8, 4 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0000, 0.0222, 1.5708 ), 
	    Vec4( 0.0000, 0.0444, 1.5708 ), 
	    Vec4( 0.0000, 0.0667, 1.5708 ), 
	    Vec4( 0.0000, 0.0889, 1.5708 ), 
	    Vec4( 0.0000, 0.1111, 1.5708 ), 
	    Vec4( 0.0000, 0.1333, 1.5708 ), 
	    Vec4( 0.0000, 0.1556, 1.5708 ), 
	    Vec4( 0.0000, 0.1778, 1.5708 ), 
	    Vec4( 0.0000, 0.2000, 1.5708 )
	  } 
	);
	mprims.push_back(mp17);

	MP mp18 = MP(
	  18, 
	  4, 
	  Vec4( -1, 8, 5 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0000, 0.0226, 1.5708 ), 
	    Vec4( 0.0000, 0.0452, 1.5708 ), 
	    Vec4( 0.0000, 0.0678, 1.5708 ), 
	    Vec4( -0.0004, 0.0903, 1.6196 ), 
	    Vec4( -0.0023, 0.1128, 1.6884 ), 
	    Vec4( -0.0057, 0.1352, 1.7572 ), 
	    Vec4( -0.0106, 0.1572, 1.8259 ), 
	    Vec4( -0.0171, 0.1789, 1.8947 ), 
	    Vec4( -0.0250, 0.2000, 1.9635 )
	  } 
	);
	mprims.push_back(mp18);

	MP mp19 = MP(
	  19, 
	  4, 
	  Vec4( 1, 8, 3 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( -0.0000, 0.0226, 1.5708 ), 
	    Vec4( -0.0000, 0.0452, 1.5708 ), 
	    Vec4( -0.0000, 0.0678, 1.5708 ), 
	    Vec4( 0.0004, 0.0903, 1.5220 ), 
	    Vec4( 0.0023, 0.1128, 1.4532 ), 
	    Vec4( 0.0057, 0.1352, 1.3844 ), 
	    Vec4( 0.0106, 0.1572, 1.3156 ), 
	    Vec4( 0.0171, 0.1789, 1.2469 ), 
	    Vec4( 0.0250, 0.2000, 1.1781 )
	  } 
	);
	mprims.push_back(mp19);

	MP mp20 = MP(
	  20, 
	  5, 
	  Vec4( -1, 2, 5 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.9635 ), 
	    Vec4( -0.0028, 0.0056, 1.9635 ), 
	    Vec4( -0.0056, 0.0111, 1.9635 ), 
	    Vec4( -0.0083, 0.0167, 1.9635 ), 
	    Vec4( -0.0111, 0.0222, 1.9635 ), 
	    Vec4( -0.0139, 0.0278, 1.9635 ), 
	    Vec4( -0.0167, 0.0333, 1.9635 ), 
	    Vec4( -0.0194, 0.0389, 1.9635 ), 
	    Vec4( -0.0222, 0.0444, 1.9635 ), 
	    Vec4( -0.0250, 0.0500, 1.9635 )
	  } 
	);
	mprims.push_back(mp20);

	MP mp21 = MP(
	  21, 
	  5, 
	  Vec4( -3, 6, 5 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.9635 ), 
	    Vec4( -0.0083, 0.0167, 1.9635 ), 
	    Vec4( -0.0167, 0.0333, 1.9635 ), 
	    Vec4( -0.0250, 0.0500, 1.9635 ), 
	    Vec4( -0.0333, 0.0667, 1.9635 ), 
	    Vec4( -0.0417, 0.0833, 1.9635 ), 
	    Vec4( -0.0500, 0.1000, 1.9635 ), 
	    Vec4( -0.0583, 0.1167, 1.9635 ), 
	    Vec4( -0.0667, 0.1333, 1.9635 ), 
	    Vec4( -0.0750, 0.1500, 1.9635 )
	  } 
	);
	mprims.push_back(mp21);

	MP mp22 = MP(
	  22, 
	  5, 
	  Vec4( -4, 5, 6 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.9635 ), 
	    Vec4( -0.0092, 0.0149, 1.9938 ), 
	    Vec4( -0.0189, 0.0296, 2.0241 ), 
	    Vec4( -0.0291, 0.0440, 2.0544 ), 
	    Vec4( -0.0398, 0.0582, 2.0847 ), 
	    Vec4( -0.0509, 0.0722, 2.1150 ), 
	    Vec4( -0.0625, 0.0858, 2.1453 ), 
	    Vec4( -0.0746, 0.0992, 2.1756 ), 
	    Vec4( -0.0871, 0.1123, 2.2059 ), 
	    Vec4( -0.1000, 0.1250, 2.2362 )
	  } 
	);
	mprims.push_back(mp22);

	MP mp23 = MP(
	  23, 
	  5, 
	  Vec4( -2, 7, 4 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.9635 ), 
	    Vec4( -0.0078, 0.0188, 1.9635 ), 
	    Vec4( -0.0156, 0.0377, 1.9635 ), 
	    Vec4( -0.0234, 0.0565, 1.9635 ), 
	    Vec4( -0.0312, 0.0754, 1.9444 ), 
	    Vec4( -0.0379, 0.0946, 1.8697 ), 
	    Vec4( -0.0432, 0.1143, 1.7950 ), 
	    Vec4( -0.0470, 0.1344, 1.7202 ), 
	    Vec4( -0.0492, 0.1546, 1.6455 ), 
	    Vec4( -0.0500, 0.1750, 1.5708 )
	  } 
	);
	mprims.push_back(mp23);

	MP mp24 = MP(
	  24, 
	  6, 
	  Vec4( -1, 1, 6 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0028, 0.0028, 2.3562 ), 
	    Vec4( -0.0056, 0.0056, 2.3562 ), 
	    Vec4( -0.0083, 0.0083, 2.3562 ), 
	    Vec4( -0.0111, 0.0111, 2.3562 ), 
	    Vec4( -0.0139, 0.0139, 2.3562 ), 
	    Vec4( -0.0167, 0.0167, 2.3562 ), 
	    Vec4( -0.0194, 0.0194, 2.3562 ), 
	    Vec4( -0.0222, 0.0222, 2.3562 ), 
	    Vec4( -0.0250, 0.0250, 2.3562 )
	  } 
	);
	mprims.push_back(mp24);

	MP mp25 = MP(
	  25, 
	  6, 
	  Vec4( -6, 6, 6 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0167, 0.0167, 2.3562 ), 
	    Vec4( -0.0333, 0.0333, 2.3562 ), 
	    Vec4( -0.0500, 0.0500, 2.3562 ), 
	    Vec4( -0.0667, 0.0667, 2.3562 ), 
	    Vec4( -0.0833, 0.0833, 2.3562 ), 
	    Vec4( -0.1000, 0.1000, 2.3562 ), 
	    Vec4( -0.1167, 0.1167, 2.3562 ), 
	    Vec4( -0.1333, 0.1333, 2.3562 ), 
	    Vec4( -0.1500, 0.1500, 2.3562 )
	  } 
	);
	mprims.push_back(mp25);

	MP mp26 = MP(
	  26, 
	  6, 
	  Vec4( -7, 5, 7 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0170, 0.0170, 2.3562 ), 
	    Vec4( -0.0342, 0.0339, 2.3859 ), 
	    Vec4( -0.0522, 0.0500, 2.4377 ), 
	    Vec4( -0.0709, 0.0651, 2.4896 ), 
	    Vec4( -0.0904, 0.0792, 2.5415 ), 
	    Vec4( -0.1107, 0.0923, 2.5933 ), 
	    Vec4( -0.1315, 0.1043, 2.6452 ), 
	    Vec4( -0.1530, 0.1152, 2.6970 ), 
	    Vec4( -0.1750, 0.1250, 2.7489 )
	  } 
	);
	mprims.push_back(mp26);

	MP mp27 = MP(
	  27, 
	  6, 
	  Vec4( -5, 7, 5 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0170, 0.0170, 2.3562 ), 
	    Vec4( -0.0339, 0.0342, 2.3265 ), 
	    Vec4( -0.0500, 0.0522, 2.2747 ), 
	    Vec4( -0.0651, 0.0709, 2.2228 ), 
	    Vec4( -0.0792, 0.0904, 2.1709 ), 
	    Vec4( -0.0923, 0.1107, 2.1191 ), 
	    Vec4( -0.1043, 0.1315, 2.0672 ), 
	    Vec4( -0.1152, 0.1530, 2.0154 ), 
	    Vec4( -0.1250, 0.1750, 1.9635 )
	  } 
	);
	mprims.push_back(mp27);

	MP mp28 = MP(
	  28, 
	  7, 
	  Vec4( -2, 1, 7 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.7489 ), 
	    Vec4( -0.0056, 0.0028, 2.7489 ), 
	    Vec4( -0.0111, 0.0056, 2.7489 ), 
	    Vec4( -0.0167, 0.0083, 2.7489 ), 
	    Vec4( -0.0222, 0.0111, 2.7489 ), 
	    Vec4( -0.0278, 0.0139, 2.7489 ), 
	    Vec4( -0.0333, 0.0167, 2.7489 ), 
	    Vec4( -0.0389, 0.0194, 2.7489 ), 
	    Vec4( -0.0444, 0.0222, 2.7489 ), 
	    Vec4( -0.0500, 0.0250, 2.7489 )
	  } 
	);
	mprims.push_back(mp28);

	MP mp29 = MP(
	  29, 
	  7, 
	  Vec4( -6, 3, 7 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.7489 ), 
	    Vec4( -0.0167, 0.0083, 2.7489 ), 
	    Vec4( -0.0333, 0.0167, 2.7489 ), 
	    Vec4( -0.0500, 0.0250, 2.7489 ), 
	    Vec4( -0.0667, 0.0333, 2.7489 ), 
	    Vec4( -0.0833, 0.0417, 2.7489 ), 
	    Vec4( -0.1000, 0.0500, 2.7489 ), 
	    Vec4( -0.1167, 0.0583, 2.7489 ), 
	    Vec4( -0.1333, 0.0667, 2.7489 ), 
	    Vec4( -0.1500, 0.0750, 2.7489 )
	  } 
	);
	mprims.push_back(mp29);

	MP mp30 = MP(
	  30, 
	  7, 
	  Vec4( -5, 4, 6 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.7489 ), 
	    Vec4( -0.0149, 0.0092, 2.7186 ), 
	    Vec4( -0.0296, 0.0189, 2.6883 ), 
	    Vec4( -0.0440, 0.0291, 2.6580 ), 
	    Vec4( -0.0582, 0.0398, 2.6277 ), 
	    Vec4( -0.0722, 0.0509, 2.5974 ), 
	    Vec4( -0.0858, 0.0625, 2.5671 ), 
	    Vec4( -0.0992, 0.0746, 2.5368 ), 
	    Vec4( -0.1123, 0.0871, 2.5065 ), 
	    Vec4( -0.1250, 0.1000, 2.4762 )
	  } 
	);
	mprims.push_back(mp30);

	MP mp31 = MP(
	  31, 
	  7, 
	  Vec4( -7, 2, 8 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.7489 ), 
	    Vec4( -0.0188, 0.0078, 2.7489 ), 
	    Vec4( -0.0377, 0.0156, 2.7489 ), 
	    Vec4( -0.0565, 0.0234, 2.7489 ), 
	    Vec4( -0.0754, 0.0312, 2.7680 ), 
	    Vec4( -0.0946, 0.0379, 2.8427 ), 
	    Vec4( -0.1143, 0.0432, 2.9174 ), 
	    Vec4( -0.1344, 0.0470, 2.9921 ), 
	    Vec4( -0.1546, 0.0492, 3.0669 ), 
	    Vec4( -0.1750, 0.0500, 3.1416 )
	  } 
	);
	mprims.push_back(mp31);

	MP mp32 = MP(
	  32, 
	  8, 
	  Vec4( -1, 0, 8 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0028, 0.0000, 3.1416 ), 
	    Vec4( -0.0056, 0.0000, 3.1416 ), 
	    Vec4( -0.0083, 0.0000, 3.1416 ), 
	    Vec4( -0.0111, 0.0000, 3.1416 ), 
	    Vec4( -0.0139, 0.0000, 3.1416 ), 
	    Vec4( -0.0167, 0.0000, 3.1416 ), 
	    Vec4( -0.0194, 0.0000, 3.1416 ), 
	    Vec4( -0.0222, 0.0000, 3.1416 ), 
	    Vec4( -0.0250, 0.0000, 3.1416 )
	  } 
	);
	mprims.push_back(mp32);

	MP mp33 = MP(
	  33, 
	  8, 
	  Vec4( -8, 0, 8 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0222, 0.0000, 3.1416 ), 
	    Vec4( -0.0444, 0.0000, 3.1416 ), 
	    Vec4( -0.0667, 0.0000, 3.1416 ), 
	    Vec4( -0.0889, 0.0000, 3.1416 ), 
	    Vec4( -0.1111, 0.0000, 3.1416 ), 
	    Vec4( -0.1333, 0.0000, 3.1416 ), 
	    Vec4( -0.1556, 0.0000, 3.1416 ), 
	    Vec4( -0.1778, 0.0000, 3.1416 ), 
	    Vec4( -0.2000, 0.0000, 3.1416 )
	  } 
	);
	mprims.push_back(mp33);

	MP mp34 = MP(
	  34, 
	  8, 
	  Vec4( -8, -1, 9 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0226, 0.0000, 3.1416 ), 
	    Vec4( -0.0452, 0.0000, 3.1416 ), 
	    Vec4( -0.0678, 0.0000, 3.1416 ), 
	    Vec4( -0.0903, -0.0004, 3.1904 ), 
	    Vec4( -0.1128, -0.0023, 3.2592 ), 
	    Vec4( -0.1352, -0.0057, 3.3280 ), 
	    Vec4( -0.1572, -0.0106, 3.3967 ), 
	    Vec4( -0.1789, -0.0171, 3.4655 ), 
	    Vec4( -0.2000, -0.0250, 3.5343 )
	  } 
	);
	mprims.push_back(mp34);

	MP mp35 = MP(
	  35, 
	  8, 
	  Vec4( -8, 1, 7 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0226, 0.0000, 3.1416 ), 
	    Vec4( -0.0452, 0.0000, 3.1416 ), 
	    Vec4( -0.0678, 0.0000, 3.1416 ), 
	    Vec4( -0.0903, 0.0004, 3.0928 ), 
	    Vec4( -0.1128, 0.0023, 3.0240 ), 
	    Vec4( -0.1352, 0.0057, 2.9552 ), 
	    Vec4( -0.1572, 0.0106, 2.8864 ), 
	    Vec4( -0.1789, 0.0171, 2.8177 ), 
	    Vec4( -0.2000, 0.0250, 2.7489 )
	  } 
	);
	mprims.push_back(mp35);

	MP mp36 = MP(
	  36, 
	  9, 
	  Vec4( -2, -1, 9 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.5343 ), 
	    Vec4( -0.0056, -0.0028, 3.5343 ), 
	    Vec4( -0.0111, -0.0056, 3.5343 ), 
	    Vec4( -0.0167, -0.0083, 3.5343 ), 
	    Vec4( -0.0222, -0.0111, 3.5343 ), 
	    Vec4( -0.0278, -0.0139, 3.5343 ), 
	    Vec4( -0.0333, -0.0167, 3.5343 ), 
	    Vec4( -0.0389, -0.0194, 3.5343 ), 
	    Vec4( -0.0444, -0.0222, 3.5343 ), 
	    Vec4( -0.0500, -0.0250, 3.5343 )
	  } 
	);
	mprims.push_back(mp36);

	MP mp37 = MP(
	  37, 
	  9, 
	  Vec4( -6, -3, 9 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.5343 ), 
	    Vec4( -0.0167, -0.0083, 3.5343 ), 
	    Vec4( -0.0333, -0.0167, 3.5343 ), 
	    Vec4( -0.0500, -0.0250, 3.5343 ), 
	    Vec4( -0.0667, -0.0333, 3.5343 ), 
	    Vec4( -0.0833, -0.0417, 3.5343 ), 
	    Vec4( -0.1000, -0.0500, 3.5343 ), 
	    Vec4( -0.1167, -0.0583, 3.5343 ), 
	    Vec4( -0.1333, -0.0667, 3.5343 ), 
	    Vec4( -0.1500, -0.0750, 3.5343 )
	  } 
	);
	mprims.push_back(mp37);

	MP mp38 = MP(
	  38, 
	  9, 
	  Vec4( -5, -4, 10 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.5343 ), 
	    Vec4( -0.0149, -0.0092, 3.5646 ), 
	    Vec4( -0.0296, -0.0189, 3.5949 ), 
	    Vec4( -0.0440, -0.0291, 3.6252 ), 
	    Vec4( -0.0582, -0.0398, 3.6555 ), 
	    Vec4( -0.0722, -0.0509, 3.6858 ), 
	    Vec4( -0.0858, -0.0625, 3.7161 ), 
	    Vec4( -0.0992, -0.0746, 3.7464 ), 
	    Vec4( -0.1123, -0.0871, 3.7767 ), 
	    Vec4( -0.1250, -0.1000, 3.8070 )
	  } 
	);
	mprims.push_back(mp38);

	MP mp39 = MP(
	  39, 
	  9, 
	  Vec4( -7, -2, 8 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.5343 ), 
	    Vec4( -0.0188, -0.0078, 3.5343 ), 
	    Vec4( -0.0377, -0.0156, 3.5343 ), 
	    Vec4( -0.0565, -0.0234, 3.5343 ), 
	    Vec4( -0.0754, -0.0312, 3.5152 ), 
	    Vec4( -0.0946, -0.0379, 3.4405 ), 
	    Vec4( -0.1143, -0.0432, 3.3658 ), 
	    Vec4( -0.1344, -0.0470, 3.2910 ), 
	    Vec4( -0.1546, -0.0492, 3.2163 ), 
	    Vec4( -0.1750, -0.0500, 3.1416 )
	  } 
	);
	mprims.push_back(mp39);

	MP mp40 = MP(
	  40, 
	  10, 
	  Vec4( -1, -1, 10 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0028, -0.0028, 3.9270 ), 
	    Vec4( -0.0056, -0.0056, 3.9270 ), 
	    Vec4( -0.0083, -0.0083, 3.9270 ), 
	    Vec4( -0.0111, -0.0111, 3.9270 ), 
	    Vec4( -0.0139, -0.0139, 3.9270 ), 
	    Vec4( -0.0167, -0.0167, 3.9270 ), 
	    Vec4( -0.0194, -0.0194, 3.9270 ), 
	    Vec4( -0.0222, -0.0222, 3.9270 ), 
	    Vec4( -0.0250, -0.0250, 3.9270 )
	  } 
	);
	mprims.push_back(mp40);

	MP mp41 = MP(
	  41, 
	  10, 
	  Vec4( -6, -6, 10 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0167, -0.0167, 3.9270 ), 
	    Vec4( -0.0333, -0.0333, 3.9270 ), 
	    Vec4( -0.0500, -0.0500, 3.9270 ), 
	    Vec4( -0.0667, -0.0667, 3.9270 ), 
	    Vec4( -0.0833, -0.0833, 3.9270 ), 
	    Vec4( -0.1000, -0.1000, 3.9270 ), 
	    Vec4( -0.1167, -0.1167, 3.9270 ), 
	    Vec4( -0.1333, -0.1333, 3.9270 ), 
	    Vec4( -0.1500, -0.1500, 3.9270 )
	  } 
	);
	mprims.push_back(mp41);

	MP mp42 = MP(
	  42, 
	  10, 
	  Vec4( -5, -7, 11 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0170, -0.0170, 3.9270 ), 
	    Vec4( -0.0339, -0.0342, 3.9567 ), 
	    Vec4( -0.0500, -0.0522, 4.0085 ), 
	    Vec4( -0.0651, -0.0709, 4.0604 ), 
	    Vec4( -0.0792, -0.0904, 4.1123 ), 
	    Vec4( -0.0923, -0.1107, 4.1641 ), 
	    Vec4( -0.1043, -0.1315, 4.2160 ), 
	    Vec4( -0.1152, -0.1530, 4.2678 ), 
	    Vec4( -0.1250, -0.1750, 4.3197 )
	  } 
	);
	mprims.push_back(mp42);

	MP mp43 = MP(
	  43, 
	  10, 
	  Vec4( -7, -5, 9 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0170, -0.0170, 3.9270 ), 
	    Vec4( -0.0342, -0.0339, 3.8973 ), 
	    Vec4( -0.0522, -0.0500, 3.8455 ), 
	    Vec4( -0.0709, -0.0651, 3.7936 ), 
	    Vec4( -0.0904, -0.0792, 3.7417 ), 
	    Vec4( -0.1107, -0.0923, 3.6899 ), 
	    Vec4( -0.1315, -0.1043, 3.6380 ), 
	    Vec4( -0.1530, -0.1152, 3.5862 ), 
	    Vec4( -0.1750, -0.1250, 3.5343 )
	  } 
	);
	mprims.push_back(mp43);

	MP mp44 = MP(
	  44, 
	  11, 
	  Vec4( -1, -2, 11 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.3197 ), 
	    Vec4( -0.0028, -0.0056, 4.3197 ), 
	    Vec4( -0.0056, -0.0111, 4.3197 ), 
	    Vec4( -0.0083, -0.0167, 4.3197 ), 
	    Vec4( -0.0111, -0.0222, 4.3197 ), 
	    Vec4( -0.0139, -0.0278, 4.3197 ), 
	    Vec4( -0.0167, -0.0333, 4.3197 ), 
	    Vec4( -0.0194, -0.0389, 4.3197 ), 
	    Vec4( -0.0222, -0.0444, 4.3197 ), 
	    Vec4( -0.0250, -0.0500, 4.3197 )
	  } 
	);
	mprims.push_back(mp44);

	MP mp45 = MP(
	  45, 
	  11, 
	  Vec4( -3, -6, 11 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.3197 ), 
	    Vec4( -0.0083, -0.0167, 4.3197 ), 
	    Vec4( -0.0167, -0.0333, 4.3197 ), 
	    Vec4( -0.0250, -0.0500, 4.3197 ), 
	    Vec4( -0.0333, -0.0667, 4.3197 ), 
	    Vec4( -0.0417, -0.0833, 4.3197 ), 
	    Vec4( -0.0500, -0.1000, 4.3197 ), 
	    Vec4( -0.0583, -0.1167, 4.3197 ), 
	    Vec4( -0.0667, -0.1333, 4.3197 ), 
	    Vec4( -0.0750, -0.1500, 4.3197 )
	  } 
	);
	mprims.push_back(mp45);

	MP mp46 = MP(
	  46, 
	  11, 
	  Vec4( -4, -5, 10 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.3197 ), 
	    Vec4( -0.0092, -0.0149, 4.2894 ), 
	    Vec4( -0.0189, -0.0296, 4.2591 ), 
	    Vec4( -0.0291, -0.0440, 4.2288 ), 
	    Vec4( -0.0398, -0.0582, 4.1985 ), 
	    Vec4( -0.0509, -0.0722, 4.1682 ), 
	    Vec4( -0.0625, -0.0858, 4.1379 ), 
	    Vec4( -0.0746, -0.0992, 4.1076 ), 
	    Vec4( -0.0871, -0.1123, 4.0773 ), 
	    Vec4( -0.1000, -0.1250, 4.0470 )
	  } 
	);
	mprims.push_back(mp46);

	MP mp47 = MP(
	  47, 
	  11, 
	  Vec4( -2, -7, 12 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.3197 ), 
	    Vec4( -0.0078, -0.0188, 4.3197 ), 
	    Vec4( -0.0156, -0.0377, 4.3197 ), 
	    Vec4( -0.0234, -0.0565, 4.3197 ), 
	    Vec4( -0.0312, -0.0754, 4.3388 ), 
	    Vec4( -0.0379, -0.0946, 4.4135 ), 
	    Vec4( -0.0432, -0.1143, 4.4882 ), 
	    Vec4( -0.0470, -0.1344, 4.5629 ), 
	    Vec4( -0.0492, -0.1546, 4.6377 ), 
	    Vec4( -0.0500, -0.1750, 4.7124 )
	  } 
	);
	mprims.push_back(mp47);

	MP mp48 = MP(
	  48, 
	  12, 
	  Vec4( 0, -1, 12 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0000, -0.0028, 4.7124 ), 
	    Vec4( 0.0000, -0.0056, 4.7124 ), 
	    Vec4( 0.0000, -0.0083, 4.7124 ), 
	    Vec4( 0.0000, -0.0111, 4.7124 ), 
	    Vec4( 0.0000, -0.0139, 4.7124 ), 
	    Vec4( 0.0000, -0.0167, 4.7124 ), 
	    Vec4( 0.0000, -0.0194, 4.7124 ), 
	    Vec4( 0.0000, -0.0222, 4.7124 ), 
	    Vec4( 0.0000, -0.0250, 4.7124 )
	  } 
	);
	mprims.push_back(mp48);

	MP mp49 = MP(
	  49, 
	  12, 
	  Vec4( 0, -8, 12 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0000, -0.0222, 4.7124 ), 
	    Vec4( 0.0000, -0.0444, 4.7124 ), 
	    Vec4( 0.0000, -0.0667, 4.7124 ), 
	    Vec4( 0.0000, -0.0889, 4.7124 ), 
	    Vec4( 0.0000, -0.1111, 4.7124 ), 
	    Vec4( 0.0000, -0.1333, 4.7124 ), 
	    Vec4( 0.0000, -0.1556, 4.7124 ), 
	    Vec4( 0.0000, -0.1778, 4.7124 ), 
	    Vec4( 0.0000, -0.2000, 4.7124 )
	  } 
	);
	mprims.push_back(mp49);

	MP mp50 = MP(
	  50, 
	  12, 
	  Vec4( 1, -8, 13 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0000, -0.0226, 4.7124 ), 
	    Vec4( 0.0000, -0.0452, 4.7124 ), 
	    Vec4( 0.0000, -0.0678, 4.7124 ), 
	    Vec4( 0.0004, -0.0903, 4.7612 ), 
	    Vec4( 0.0023, -0.1128, 4.8300 ), 
	    Vec4( 0.0057, -0.1352, 4.8988 ), 
	    Vec4( 0.0106, -0.1572, 4.9675 ), 
	    Vec4( 0.0171, -0.1789, 5.0363 ), 
	    Vec4( 0.0250, -0.2000, 5.1051 )
	  } 
	);
	mprims.push_back(mp50);

	MP mp51 = MP(
	  51, 
	  12, 
	  Vec4( -1, -8, 11 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( -0.0000, -0.0226, 4.7124 ), 
	    Vec4( -0.0000, -0.0452, 4.7124 ), 
	    Vec4( -0.0000, -0.0678, 4.7124 ), 
	    Vec4( -0.0004, -0.0903, 4.6636 ), 
	    Vec4( -0.0023, -0.1128, 4.5948 ), 
	    Vec4( -0.0057, -0.1352, 4.5260 ), 
	    Vec4( -0.0106, -0.1572, 4.4572 ), 
	    Vec4( -0.0171, -0.1789, 4.3885 ), 
	    Vec4( -0.0250, -0.2000, 4.3197 )
	  } 
	);
	mprims.push_back(mp51);

	MP mp52 = MP(
	  52, 
	  13, 
	  Vec4( 1, -2, 13 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.1051 ), 
	    Vec4( 0.0028, -0.0056, 5.1051 ), 
	    Vec4( 0.0056, -0.0111, 5.1051 ), 
	    Vec4( 0.0083, -0.0167, 5.1051 ), 
	    Vec4( 0.0111, -0.0222, 5.1051 ), 
	    Vec4( 0.0139, -0.0278, 5.1051 ), 
	    Vec4( 0.0167, -0.0333, 5.1051 ), 
	    Vec4( 0.0194, -0.0389, 5.1051 ), 
	    Vec4( 0.0222, -0.0444, 5.1051 ), 
	    Vec4( 0.0250, -0.0500, 5.1051 )
	  } 
	);
	mprims.push_back(mp52);

	MP mp53 = MP(
	  53, 
	  13, 
	  Vec4( 3, -6, 13 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.1051 ), 
	    Vec4( 0.0083, -0.0167, 5.1051 ), 
	    Vec4( 0.0167, -0.0333, 5.1051 ), 
	    Vec4( 0.0250, -0.0500, 5.1051 ), 
	    Vec4( 0.0333, -0.0667, 5.1051 ), 
	    Vec4( 0.0417, -0.0833, 5.1051 ), 
	    Vec4( 0.0500, -0.1000, 5.1051 ), 
	    Vec4( 0.0583, -0.1167, 5.1051 ), 
	    Vec4( 0.0667, -0.1333, 5.1051 ), 
	    Vec4( 0.0750, -0.1500, 5.1051 )
	  } 
	);
	mprims.push_back(mp53);

	MP mp54 = MP(
	  54, 
	  13, 
	  Vec4( 4, -5, 14 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.1051 ), 
	    Vec4( 0.0092, -0.0149, 5.1354 ), 
	    Vec4( 0.0189, -0.0296, 5.1657 ), 
	    Vec4( 0.0291, -0.0440, 5.1960 ), 
	    Vec4( 0.0398, -0.0582, 5.2263 ), 
	    Vec4( 0.0509, -0.0722, 5.2566 ), 
	    Vec4( 0.0625, -0.0858, 5.2869 ), 
	    Vec4( 0.0746, -0.0992, 5.3172 ), 
	    Vec4( 0.0871, -0.1123, 5.3475 ), 
	    Vec4( 0.1000, -0.1250, 5.3778 )
	  } 
	);
	mprims.push_back(mp54);

	MP mp55 = MP(
	  55, 
	  13, 
	  Vec4( 2, -7, 12 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.1051 ), 
	    Vec4( 0.0078, -0.0188, 5.1051 ), 
	    Vec4( 0.0156, -0.0377, 5.1051 ), 
	    Vec4( 0.0234, -0.0565, 5.1051 ), 
	    Vec4( 0.0312, -0.0754, 5.0860 ), 
	    Vec4( 0.0379, -0.0946, 5.0113 ), 
	    Vec4( 0.0432, -0.1143, 4.9366 ), 
	    Vec4( 0.0470, -0.1344, 4.8618 ), 
	    Vec4( 0.0492, -0.1546, 4.7871 ), 
	    Vec4( 0.0500, -0.1750, 4.7124 )
	  } 
	);
	mprims.push_back(mp55);

	MP mp56 = MP(
	  56, 
	  14, 
	  Vec4( 1, -1, 14 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0028, -0.0028, 5.4978 ), 
	    Vec4( 0.0056, -0.0056, 5.4978 ), 
	    Vec4( 0.0083, -0.0083, 5.4978 ), 
	    Vec4( 0.0111, -0.0111, 5.4978 ), 
	    Vec4( 0.0139, -0.0139, 5.4978 ), 
	    Vec4( 0.0167, -0.0167, 5.4978 ), 
	    Vec4( 0.0194, -0.0194, 5.4978 ), 
	    Vec4( 0.0222, -0.0222, 5.4978 ), 
	    Vec4( 0.0250, -0.0250, 5.4978 )
	  } 
	);
	mprims.push_back(mp56);

	MP mp57 = MP(
	  57, 
	  14, 
	  Vec4( 6, -6, 14 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0167, -0.0167, 5.4978 ), 
	    Vec4( 0.0333, -0.0333, 5.4978 ), 
	    Vec4( 0.0500, -0.0500, 5.4978 ), 
	    Vec4( 0.0667, -0.0667, 5.4978 ), 
	    Vec4( 0.0833, -0.0833, 5.4978 ), 
	    Vec4( 0.1000, -0.1000, 5.4978 ), 
	    Vec4( 0.1167, -0.1167, 5.4978 ), 
	    Vec4( 0.1333, -0.1333, 5.4978 ), 
	    Vec4( 0.1500, -0.1500, 5.4978 )
	  } 
	);
	mprims.push_back(mp57);

	MP mp58 = MP(
	  58, 
	  14, 
	  Vec4( 7, -5, 15 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0170, -0.0170, 5.4978 ), 
	    Vec4( 0.0342, -0.0339, 5.5275 ), 
	    Vec4( 0.0522, -0.0500, 5.5793 ), 
	    Vec4( 0.0709, -0.0651, 5.6312 ), 
	    Vec4( 0.0904, -0.0792, 5.6830 ), 
	    Vec4( 0.1107, -0.0923, 5.7349 ), 
	    Vec4( 0.1315, -0.1043, 5.7868 ), 
	    Vec4( 0.1530, -0.1152, 5.8386 ), 
	    Vec4( 0.1750, -0.1250, 5.8905 )
	  } 
	);
	mprims.push_back(mp58);

	MP mp59 = MP(
	  59, 
	  14, 
	  Vec4( 5, -7, 13 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0170, -0.0170, 5.4978 ), 
	    Vec4( 0.0339, -0.0342, 5.4681 ), 
	    Vec4( 0.0500, -0.0522, 5.4162 ), 
	    Vec4( 0.0651, -0.0709, 5.3644 ), 
	    Vec4( 0.0792, -0.0904, 5.3125 ), 
	    Vec4( 0.0923, -0.1107, 5.2607 ), 
	    Vec4( 0.1043, -0.1315, 5.2088 ), 
	    Vec4( 0.1152, -0.1530, 5.1569 ), 
	    Vec4( 0.1250, -0.1750, 5.1051 )
	  } 
	);
	mprims.push_back(mp59);

	MP mp60 = MP(
	  60, 
	  15, 
	  Vec4( 2, -1, 15 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.8905 ), 
	    Vec4( 0.0056, -0.0028, 5.8905 ), 
	    Vec4( 0.0111, -0.0056, 5.8905 ), 
	    Vec4( 0.0167, -0.0083, 5.8905 ), 
	    Vec4( 0.0222, -0.0111, 5.8905 ), 
	    Vec4( 0.0278, -0.0139, 5.8905 ), 
	    Vec4( 0.0333, -0.0167, 5.8905 ), 
	    Vec4( 0.0389, -0.0194, 5.8905 ), 
	    Vec4( 0.0444, -0.0222, 5.8905 ), 
	    Vec4( 0.0500, -0.0250, 5.8905 )
	  } 
	);
	mprims.push_back(mp60);

	MP mp61 = MP(
	  61, 
	  15, 
	  Vec4( 6, -3, 15 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.8905 ), 
	    Vec4( 0.0167, -0.0083, 5.8905 ), 
	    Vec4( 0.0333, -0.0167, 5.8905 ), 
	    Vec4( 0.0500, -0.0250, 5.8905 ), 
	    Vec4( 0.0667, -0.0333, 5.8905 ), 
	    Vec4( 0.0833, -0.0417, 5.8905 ), 
	    Vec4( 0.1000, -0.0500, 5.8905 ), 
	    Vec4( 0.1167, -0.0583, 5.8905 ), 
	    Vec4( 0.1333, -0.0667, 5.8905 ), 
	    Vec4( 0.1500, -0.0750, 5.8905 )
	  } 
	);
	mprims.push_back(mp61);

	MP mp62 = MP(
	  62, 
	  15, 
	  Vec4( 5, -4, 14 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.8905 ), 
	    Vec4( 0.0149, -0.0092, 5.8602 ), 
	    Vec4( 0.0296, -0.0189, 5.8299 ), 
	    Vec4( 0.0440, -0.0291, 5.7996 ), 
	    Vec4( 0.0582, -0.0398, 5.7693 ), 
	    Vec4( 0.0722, -0.0509, 5.7390 ), 
	    Vec4( 0.0858, -0.0625, 5.7087 ), 
	    Vec4( 0.0992, -0.0746, 5.6784 ), 
	    Vec4( 0.1123, -0.0871, 5.6481 ), 
	    Vec4( 0.1250, -0.1000, 5.6178 )
	  } 
	);
	mprims.push_back(mp62);

	MP mp63 = MP(
	  63, 
	  15, 
	  Vec4( 7, -2, 0 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.8905 ), 
	    Vec4( 0.0188, -0.0078, 5.8905 ), 
	    Vec4( 0.0377, -0.0156, 5.8905 ), 
	    Vec4( 0.0565, -0.0234, 5.8905 ), 
	    Vec4( 0.0754, -0.0312, 5.9096 ), 
	    Vec4( 0.0946, -0.0379, 5.9843 ), 
	    Vec4( 0.1143, -0.0432, 6.0590 ), 
	    Vec4( 0.1344, -0.0470, 6.1337 ), 
	    Vec4( 0.1546, -0.0492, 6.2085 ), 
	    Vec4( 0.1750, -0.0500, 6.2832 )
	  } 
	);
	mprims.push_back(mp63);


	return mprims;
};

vector<MP> MPrims_lowres() { // copy and paste from MATLAB file here
	vector<MP> mprims;

	MP mp0 = MP(
	  0, 
	  0, 
	  Vec4( 2, 0, 0 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0056, 0.0000, 0.0000 ), 
	    Vec4( 0.0111, 0.0000, 0.0000 ), 
	    Vec4( 0.0167, 0.0000, 0.0000 ), 
	    Vec4( 0.0222, 0.0000, 0.0000 ), 
	    Vec4( 0.0278, 0.0000, 0.0000 ), 
	    Vec4( 0.0333, 0.0000, 0.0000 ), 
	    Vec4( 0.0389, 0.0000, 0.0000 ), 
	    Vec4( 0.0444, 0.0000, 0.0000 ), 
	    Vec4( 0.0500, 0.0000, 0.0000 )
	  } 
	);
	mprims.push_back(mp0);

	MP mp1 = MP(
	  1, 
	  0, 
	  Vec4( 16, 0, 0 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0444, 0.0000, 0.0000 ), 
	    Vec4( 0.0889, 0.0000, 0.0000 ), 
	    Vec4( 0.1333, 0.0000, 0.0000 ), 
	    Vec4( 0.1778, 0.0000, 0.0000 ), 
	    Vec4( 0.2222, 0.0000, 0.0000 ), 
	    Vec4( 0.2667, 0.0000, 0.0000 ), 
	    Vec4( 0.3111, 0.0000, 0.0000 ), 
	    Vec4( 0.3556, 0.0000, 0.0000 ), 
	    Vec4( 0.4000, 0.0000, 0.0000 )
	  } 
	);
	mprims.push_back(mp1);

	MP mp2 = MP(
	  2, 
	  0, 
	  Vec4( 12, 12, 1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0408, 0.0069, 0.0825 ), 
	    Vec4( 0.0810, 0.0207, 0.1650 ), 
	    Vec4( 0.1201, 0.0414, 0.2475 ), 
	    Vec4( 0.1574, 0.0688, 0.3299 ), 
	    Vec4( 0.1925, 0.1028, 0.4124 ), 
	    Vec4( 0.2249, 0.1432, 0.4949 ), 
	    Vec4( 0.2539, 0.1898, 0.5774 ), 
	    Vec4( 0.2791, 0.2421, 0.6599 ), 
	    Vec4( 0.3000, 0.3000, 0.7424 )
	  } 
	);
	mprims.push_back(mp2);

	MP mp3 = MP(
	  3, 
	  0, 
	  Vec4( 12, -12, -1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.0000 ), 
	    Vec4( 0.0408, -0.0069, -0.0825 ), 
	    Vec4( 0.0810, -0.0207, -0.1650 ), 
	    Vec4( 0.1201, -0.0414, -0.2475 ), 
	    Vec4( 0.1574, -0.0688, -0.3299 ), 
	    Vec4( 0.1925, -0.1028, -0.4124 ), 
	    Vec4( 0.2249, -0.1432, -0.4949 ), 
	    Vec4( 0.2539, -0.1898, -0.5774 ), 
	    Vec4( 0.2791, -0.2421, -0.6599 ), 
	    Vec4( 0.3000, -0.3000, -0.7424 )
	  } 
	);
	mprims.push_back(mp3);

	MP mp4 = MP(
	  4, 
	  1, 
	  Vec4( 2, 2, 1 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0056, 0.0056, 0.7854 ), 
	    Vec4( 0.0111, 0.0111, 0.7854 ), 
	    Vec4( 0.0167, 0.0167, 0.7854 ), 
	    Vec4( 0.0222, 0.0222, 0.7854 ), 
	    Vec4( 0.0278, 0.0278, 0.7854 ), 
	    Vec4( 0.0333, 0.0333, 0.7854 ), 
	    Vec4( 0.0389, 0.0389, 0.7854 ), 
	    Vec4( 0.0444, 0.0444, 0.7854 ), 
	    Vec4( 0.0500, 0.0500, 0.7854 )
	  } 
	);
	mprims.push_back(mp4);

	MP mp5 = MP(
	  5, 
	  1, 
	  Vec4( 12, 12, 1 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0333, 0.0333, 0.7854 ), 
	    Vec4( 0.0667, 0.0667, 0.7854 ), 
	    Vec4( 0.1000, 0.1000, 0.7854 ), 
	    Vec4( 0.1333, 0.1333, 0.7854 ), 
	    Vec4( 0.1667, 0.1667, 0.7854 ), 
	    Vec4( 0.2000, 0.2000, 0.7854 ), 
	    Vec4( 0.2333, 0.2333, 0.7854 ), 
	    Vec4( 0.2667, 0.2667, 0.7854 ), 
	    Vec4( 0.3000, 0.3000, 0.7854 )
	  } 
	);
	mprims.push_back(mp5);

	MP mp6 = MP(
	  6, 
	  1, 
	  Vec4( 0, 16, 2 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0226, 0.0318, 0.8679 ), 
	    Vec4( 0.0402, 0.0678, 0.9504 ), 
	    Vec4( 0.0525, 0.1076, 1.0329 ), 
	    Vec4( 0.0591, 0.1508, 1.1153 ), 
	    Vec4( 0.0598, 0.1969, 1.1978 ), 
	    Vec4( 0.0544, 0.2454, 1.2803 ), 
	    Vec4( 0.0427, 0.2957, 1.3628 ), 
	    Vec4( 0.0246, 0.3475, 1.4453 ), 
	    Vec4( 0.0000, 0.4000, 1.5278 )
	  } 
	);
	mprims.push_back(mp6);

	MP mp7 = MP(
	  7, 
	  1, 
	  Vec4( 16, 0, 0 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 0.7854 ), 
	    Vec4( 0.0318, 0.0226, 0.7029 ), 
	    Vec4( 0.0678, 0.0402, 0.6204 ), 
	    Vec4( 0.1076, 0.0525, 0.5379 ), 
	    Vec4( 0.1508, 0.0591, 0.4555 ), 
	    Vec4( 0.1969, 0.0598, 0.3730 ), 
	    Vec4( 0.2454, 0.0544, 0.2905 ), 
	    Vec4( 0.2957, 0.0427, 0.2080 ), 
	    Vec4( 0.3475, 0.0246, 0.1255 ), 
	    Vec4( 0.4000, 0.0000, 0.0430 )
	  } 
	);
	mprims.push_back(mp7);

	MP mp8 = MP(
	  8, 
	  2, 
	  Vec4( 0, 2, 2 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0000, 0.0056, 1.5708 ), 
	    Vec4( 0.0000, 0.0111, 1.5708 ), 
	    Vec4( 0.0000, 0.0167, 1.5708 ), 
	    Vec4( 0.0000, 0.0222, 1.5708 ), 
	    Vec4( 0.0000, 0.0278, 1.5708 ), 
	    Vec4( 0.0000, 0.0333, 1.5708 ), 
	    Vec4( 0.0000, 0.0389, 1.5708 ), 
	    Vec4( 0.0000, 0.0444, 1.5708 ), 
	    Vec4( 0.0000, 0.0500, 1.5708 )
	  } 
	);
	mprims.push_back(mp8);

	MP mp9 = MP(
	  9, 
	  2, 
	  Vec4( 0, 16, 2 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0000, 0.0444, 1.5708 ), 
	    Vec4( 0.0000, 0.0889, 1.5708 ), 
	    Vec4( 0.0000, 0.1333, 1.5708 ), 
	    Vec4( 0.0000, 0.1778, 1.5708 ), 
	    Vec4( 0.0000, 0.2222, 1.5708 ), 
	    Vec4( 0.0000, 0.2667, 1.5708 ), 
	    Vec4( 0.0000, 0.3111, 1.5708 ), 
	    Vec4( 0.0000, 0.3556, 1.5708 ), 
	    Vec4( 0.0000, 0.4000, 1.5708 )
	  } 
	);
	mprims.push_back(mp9);

	MP mp10 = MP(
	  10, 
	  2, 
	  Vec4( -12, 12, 3 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( -0.0069, 0.0408, 1.6533 ), 
	    Vec4( -0.0207, 0.0810, 1.7358 ), 
	    Vec4( -0.0414, 0.1201, 1.8183 ), 
	    Vec4( -0.0688, 0.1574, 1.9007 ), 
	    Vec4( -0.1028, 0.1925, 1.9832 ), 
	    Vec4( -0.1432, 0.2249, 2.0657 ), 
	    Vec4( -0.1898, 0.2539, 2.1482 ), 
	    Vec4( -0.2421, 0.2791, 2.2307 ), 
	    Vec4( -0.3000, 0.3000, 2.3132 )
	  } 
	);
	mprims.push_back(mp10);

	MP mp11 = MP(
	  11, 
	  2, 
	  Vec4( 12, 12, 1 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 1.5708 ), 
	    Vec4( 0.0069, 0.0408, 1.4883 ), 
	    Vec4( 0.0207, 0.0810, 1.4058 ), 
	    Vec4( 0.0414, 0.1201, 1.3233 ), 
	    Vec4( 0.0688, 0.1574, 1.2409 ), 
	    Vec4( 0.1028, 0.1925, 1.1584 ), 
	    Vec4( 0.1432, 0.2249, 1.0759 ), 
	    Vec4( 0.1898, 0.2539, 0.9934 ), 
	    Vec4( 0.2421, 0.2791, 0.9109 ), 
	    Vec4( 0.3000, 0.3000, 0.8284 )
	  } 
	);
	mprims.push_back(mp11);

	MP mp12 = MP(
	  12, 
	  3, 
	  Vec4( -2, 2, 3 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0056, 0.0056, 2.3562 ), 
	    Vec4( -0.0111, 0.0111, 2.3562 ), 
	    Vec4( -0.0167, 0.0167, 2.3562 ), 
	    Vec4( -0.0222, 0.0222, 2.3562 ), 
	    Vec4( -0.0278, 0.0278, 2.3562 ), 
	    Vec4( -0.0333, 0.0333, 2.3562 ), 
	    Vec4( -0.0389, 0.0389, 2.3562 ), 
	    Vec4( -0.0444, 0.0444, 2.3562 ), 
	    Vec4( -0.0500, 0.0500, 2.3562 )
	  } 
	);
	mprims.push_back(mp12);

	MP mp13 = MP(
	  13, 
	  3, 
	  Vec4( -12, 12, 3 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0333, 0.0333, 2.3562 ), 
	    Vec4( -0.0667, 0.0667, 2.3562 ), 
	    Vec4( -0.1000, 0.1000, 2.3562 ), 
	    Vec4( -0.1333, 0.1333, 2.3562 ), 
	    Vec4( -0.1667, 0.1667, 2.3562 ), 
	    Vec4( -0.2000, 0.2000, 2.3562 ), 
	    Vec4( -0.2333, 0.2333, 2.3562 ), 
	    Vec4( -0.2667, 0.2667, 2.3562 ), 
	    Vec4( -0.3000, 0.3000, 2.3562 )
	  } 
	);
	mprims.push_back(mp13);

	MP mp14 = MP(
	  14, 
	  3, 
	  Vec4( -16, 0, 4 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0318, 0.0226, 2.4387 ), 
	    Vec4( -0.0678, 0.0402, 2.5212 ), 
	    Vec4( -0.1076, 0.0525, 2.6037 ), 
	    Vec4( -0.1508, 0.0591, 2.6861 ), 
	    Vec4( -0.1969, 0.0598, 2.7686 ), 
	    Vec4( -0.2454, 0.0544, 2.8511 ), 
	    Vec4( -0.2957, 0.0427, 2.9336 ), 
	    Vec4( -0.3475, 0.0246, 3.0161 ), 
	    Vec4( -0.4000, 0.0000, 3.0986 )
	  } 
	);
	mprims.push_back(mp14);

	MP mp15 = MP(
	  15, 
	  3, 
	  Vec4( 0, 16, 2 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 2.3562 ), 
	    Vec4( -0.0226, 0.0318, 2.2737 ), 
	    Vec4( -0.0402, 0.0678, 2.1912 ), 
	    Vec4( -0.0525, 0.1076, 2.1087 ), 
	    Vec4( -0.0591, 0.1508, 2.0263 ), 
	    Vec4( -0.0598, 0.1969, 1.9438 ), 
	    Vec4( -0.0544, 0.2454, 1.8613 ), 
	    Vec4( -0.0427, 0.2957, 1.7788 ), 
	    Vec4( -0.0246, 0.3475, 1.6963 ), 
	    Vec4( 0.0000, 0.4000, 1.6138 )
	  } 
	);
	mprims.push_back(mp15);

	MP mp16 = MP(
	  16, 
	  4, 
	  Vec4( -2, 0, 4 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0056, 0.0000, 3.1416 ), 
	    Vec4( -0.0111, 0.0000, 3.1416 ), 
	    Vec4( -0.0167, 0.0000, 3.1416 ), 
	    Vec4( -0.0222, 0.0000, 3.1416 ), 
	    Vec4( -0.0278, 0.0000, 3.1416 ), 
	    Vec4( -0.0333, 0.0000, 3.1416 ), 
	    Vec4( -0.0389, 0.0000, 3.1416 ), 
	    Vec4( -0.0444, 0.0000, 3.1416 ), 
	    Vec4( -0.0500, 0.0000, 3.1416 )
	  } 
	);
	mprims.push_back(mp16);

	MP mp17 = MP(
	  17, 
	  4, 
	  Vec4( -16, 0, 4 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0444, 0.0000, 3.1416 ), 
	    Vec4( -0.0889, 0.0000, 3.1416 ), 
	    Vec4( -0.1333, 0.0000, 3.1416 ), 
	    Vec4( -0.1778, 0.0000, 3.1416 ), 
	    Vec4( -0.2222, 0.0000, 3.1416 ), 
	    Vec4( -0.2667, 0.0000, 3.1416 ), 
	    Vec4( -0.3111, 0.0000, 3.1416 ), 
	    Vec4( -0.3556, 0.0000, 3.1416 ), 
	    Vec4( -0.4000, 0.0000, 3.1416 )
	  } 
	);
	mprims.push_back(mp17);

	MP mp18 = MP(
	  18, 
	  4, 
	  Vec4( -12, -12, 5 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0408, -0.0069, 3.2241 ), 
	    Vec4( -0.0810, -0.0207, 3.3066 ), 
	    Vec4( -0.1201, -0.0414, 3.3890 ), 
	    Vec4( -0.1574, -0.0688, 3.4715 ), 
	    Vec4( -0.1925, -0.1028, 3.5540 ), 
	    Vec4( -0.2249, -0.1432, 3.6365 ), 
	    Vec4( -0.2539, -0.1898, 3.7190 ), 
	    Vec4( -0.2791, -0.2421, 3.8015 ), 
	    Vec4( -0.3000, -0.3000, 3.8840 )
	  } 
	);
	mprims.push_back(mp18);

	MP mp19 = MP(
	  19, 
	  4, 
	  Vec4( -12, 12, 3 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.1416 ), 
	    Vec4( -0.0408, 0.0069, 3.0591 ), 
	    Vec4( -0.0810, 0.0207, 2.9766 ), 
	    Vec4( -0.1201, 0.0414, 2.8941 ), 
	    Vec4( -0.1574, 0.0688, 2.8117 ), 
	    Vec4( -0.1925, 0.1028, 2.7292 ), 
	    Vec4( -0.2249, 0.1432, 2.6467 ), 
	    Vec4( -0.2539, 0.1898, 2.5642 ), 
	    Vec4( -0.2791, 0.2421, 2.4817 ), 
	    Vec4( -0.3000, 0.3000, 2.3992 )
	  } 
	);
	mprims.push_back(mp19);

	MP mp20 = MP(
	  20, 
	  5, 
	  Vec4( -2, -2, 5 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0056, -0.0056, 3.9270 ), 
	    Vec4( -0.0111, -0.0111, 3.9270 ), 
	    Vec4( -0.0167, -0.0167, 3.9270 ), 
	    Vec4( -0.0222, -0.0222, 3.9270 ), 
	    Vec4( -0.0278, -0.0278, 3.9270 ), 
	    Vec4( -0.0333, -0.0333, 3.9270 ), 
	    Vec4( -0.0389, -0.0389, 3.9270 ), 
	    Vec4( -0.0444, -0.0444, 3.9270 ), 
	    Vec4( -0.0500, -0.0500, 3.9270 )
	  } 
	);
	mprims.push_back(mp20);

	MP mp21 = MP(
	  21, 
	  5, 
	  Vec4( -12, -12, 5 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0333, -0.0333, 3.9270 ), 
	    Vec4( -0.0667, -0.0667, 3.9270 ), 
	    Vec4( -0.1000, -0.1000, 3.9270 ), 
	    Vec4( -0.1333, -0.1333, 3.9270 ), 
	    Vec4( -0.1667, -0.1667, 3.9270 ), 
	    Vec4( -0.2000, -0.2000, 3.9270 ), 
	    Vec4( -0.2333, -0.2333, 3.9270 ), 
	    Vec4( -0.2667, -0.2667, 3.9270 ), 
	    Vec4( -0.3000, -0.3000, 3.9270 )
	  } 
	);
	mprims.push_back(mp21);

	MP mp22 = MP(
	  22, 
	  5, 
	  Vec4( 0, -16, 6 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0226, -0.0318, 4.0095 ), 
	    Vec4( -0.0402, -0.0678, 4.0920 ), 
	    Vec4( -0.0525, -0.1076, 4.1744 ), 
	    Vec4( -0.0591, -0.1508, 4.2569 ), 
	    Vec4( -0.0598, -0.1969, 4.3394 ), 
	    Vec4( -0.0544, -0.2454, 4.4219 ), 
	    Vec4( -0.0427, -0.2957, 4.5044 ), 
	    Vec4( -0.0246, -0.3475, 4.5869 ), 
	    Vec4( 0.0000, -0.4000, 4.6694 )
	  } 
	);
	mprims.push_back(mp22);

	MP mp23 = MP(
	  23, 
	  5, 
	  Vec4( -16, 0, 4 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 3.9270 ), 
	    Vec4( -0.0318, -0.0226, 3.8445 ), 
	    Vec4( -0.0678, -0.0402, 3.7620 ), 
	    Vec4( -0.1076, -0.0525, 3.6795 ), 
	    Vec4( -0.1508, -0.0591, 3.5970 ), 
	    Vec4( -0.1969, -0.0598, 3.5146 ), 
	    Vec4( -0.2454, -0.0544, 3.4321 ), 
	    Vec4( -0.2957, -0.0427, 3.3496 ), 
	    Vec4( -0.3475, -0.0246, 3.2671 ), 
	    Vec4( -0.4000, 0.0000, 3.1846 )
	  } 
	);
	mprims.push_back(mp23);

	MP mp24 = MP(
	  24, 
	  6, 
	  Vec4( 0, -2, 6 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0000, -0.0056, 4.7124 ), 
	    Vec4( 0.0000, -0.0111, 4.7124 ), 
	    Vec4( 0.0000, -0.0167, 4.7124 ), 
	    Vec4( 0.0000, -0.0222, 4.7124 ), 
	    Vec4( 0.0000, -0.0278, 4.7124 ), 
	    Vec4( 0.0000, -0.0333, 4.7124 ), 
	    Vec4( 0.0000, -0.0389, 4.7124 ), 
	    Vec4( 0.0000, -0.0444, 4.7124 ), 
	    Vec4( 0.0000, -0.0500, 4.7124 )
	  } 
	);
	mprims.push_back(mp24);

	MP mp25 = MP(
	  25, 
	  6, 
	  Vec4( 0, -16, 6 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0000, -0.0444, 4.7124 ), 
	    Vec4( 0.0000, -0.0889, 4.7124 ), 
	    Vec4( 0.0000, -0.1333, 4.7124 ), 
	    Vec4( 0.0000, -0.1778, 4.7124 ), 
	    Vec4( 0.0000, -0.2222, 4.7124 ), 
	    Vec4( 0.0000, -0.2667, 4.7124 ), 
	    Vec4( 0.0000, -0.3111, 4.7124 ), 
	    Vec4( 0.0000, -0.3556, 4.7124 ), 
	    Vec4( 0.0000, -0.4000, 4.7124 )
	  } 
	);
	mprims.push_back(mp25);

	MP mp26 = MP(
	  26, 
	  6, 
	  Vec4( 12, -12, 7 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( 0.0069, -0.0408, 4.7949 ), 
	    Vec4( 0.0207, -0.0810, 4.8774 ), 
	    Vec4( 0.0414, -0.1201, 4.9598 ), 
	    Vec4( 0.0688, -0.1574, 5.0423 ), 
	    Vec4( 0.1028, -0.1925, 5.1248 ), 
	    Vec4( 0.1432, -0.2249, 5.2073 ), 
	    Vec4( 0.1898, -0.2539, 5.2898 ), 
	    Vec4( 0.2421, -0.2791, 5.3723 ), 
	    Vec4( 0.3000, -0.3000, 5.4548 )
	  } 
	);
	mprims.push_back(mp26);

	MP mp27 = MP(
	  27, 
	  6, 
	  Vec4( -12, -12, 5 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 4.7124 ), 
	    Vec4( -0.0069, -0.0408, 4.6299 ), 
	    Vec4( -0.0207, -0.0810, 4.5474 ), 
	    Vec4( -0.0414, -0.1201, 4.4649 ), 
	    Vec4( -0.0688, -0.1574, 4.3824 ), 
	    Vec4( -0.1028, -0.1925, 4.3000 ), 
	    Vec4( -0.1432, -0.2249, 4.2175 ), 
	    Vec4( -0.1898, -0.2539, 4.1350 ), 
	    Vec4( -0.2421, -0.2791, 4.0525 ), 
	    Vec4( -0.3000, -0.3000, 3.9700 )
	  } 
	);
	mprims.push_back(mp27);

	MP mp28 = MP(
	  28, 
	  7, 
	  Vec4( 2, -2, 7 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0056, -0.0056, 5.4978 ), 
	    Vec4( 0.0111, -0.0111, 5.4978 ), 
	    Vec4( 0.0167, -0.0167, 5.4978 ), 
	    Vec4( 0.0222, -0.0222, 5.4978 ), 
	    Vec4( 0.0278, -0.0278, 5.4978 ), 
	    Vec4( 0.0333, -0.0333, 5.4978 ), 
	    Vec4( 0.0389, -0.0389, 5.4978 ), 
	    Vec4( 0.0444, -0.0444, 5.4978 ), 
	    Vec4( 0.0500, -0.0500, 5.4978 )
	  } 
	);
	mprims.push_back(mp28);

	MP mp29 = MP(
	  29, 
	  7, 
	  Vec4( 12, -12, 7 ), 
	  1, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0333, -0.0333, 5.4978 ), 
	    Vec4( 0.0667, -0.0667, 5.4978 ), 
	    Vec4( 0.1000, -0.1000, 5.4978 ), 
	    Vec4( 0.1333, -0.1333, 5.4978 ), 
	    Vec4( 0.1667, -0.1667, 5.4978 ), 
	    Vec4( 0.2000, -0.2000, 5.4978 ), 
	    Vec4( 0.2333, -0.2333, 5.4978 ), 
	    Vec4( 0.2667, -0.2667, 5.4978 ), 
	    Vec4( 0.3000, -0.3000, 5.4978 )
	  } 
	);
	mprims.push_back(mp29);

	MP mp30 = MP(
	  30, 
	  7, 
	  Vec4( 16, 0, 0 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0318, -0.0226, 5.5803 ), 
	    Vec4( 0.0678, -0.0402, 5.6628 ), 
	    Vec4( 0.1076, -0.0525, 5.7452 ), 
	    Vec4( 0.1508, -0.0591, 5.8277 ), 
	    Vec4( 0.1969, -0.0598, 5.9102 ), 
	    Vec4( 0.2454, -0.0544, 5.9927 ), 
	    Vec4( 0.2957, -0.0427, 6.0752 ), 
	    Vec4( 0.3475, -0.0246, 6.1577 ), 
	    Vec4( 0.4000, 0.0000, 6.2402 )
	  } 
	);
	mprims.push_back(mp30);

	MP mp31 = MP(
	  31, 
	  7, 
	  Vec4( 0, -16, 6 ), 
	  2, 
	  { 
	    Vec4( 0.0000, 0.0000, 5.4978 ), 
	    Vec4( 0.0226, -0.0318, 5.4153 ), 
	    Vec4( 0.0402, -0.0678, 5.3328 ), 
	    Vec4( 0.0525, -0.1076, 5.2503 ), 
	    Vec4( 0.0591, -0.1508, 5.1678 ), 
	    Vec4( 0.0598, -0.1969, 5.0854 ), 
	    Vec4( 0.0544, -0.2454, 5.0029 ), 
	    Vec4( 0.0427, -0.2957, 4.9204 ), 
	    Vec4( 0.0246, -0.3475, 4.8379 ), 
	    Vec4( 0.0000, -0.4000, 4.7554 )
	  } 
	);
	mprims.push_back(mp31);

	return mprims;
}






